{
  "name": "material-ui",
  "author": {
    "name": "Call-em-all Engineering Team"
  },
  "version": "0.10.4",
  "description": "Material Design UI components built with React",
  "main": "./lib",
  "scripts": {
    "test": "npm run test-base -- --single-run",
    "test-watch": "npm run test-base -- --auto-watch",
    "test-base": "./node_modules/.bin/karma start",
    "prebuild": "rm -rf lib",
    "eslint": "gulp eslint",
    "build": "npm run eslint && babel --stage 1 ./src --out-dir ./lib",
    "prepublish": "npm run build"
  },
  "keywords": [
    "react",
    "react-component",
    "material design",
    "material-ui",
    "material ui"
  ],
  "repository": {
    "type": "git",
    "url": "https://github.com/callemall/material-ui.git"
  },
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/callemall/material-ui/issues"
  },
  "homepage": "http://material-ui.com/",
  "dependencies": {
    "classnames": "^1.2.0",
    "react-draggable2": "^0.5.1"
  },
  "peerDependencies": {
    "react": ">=0.13",
    "react-tap-event-plugin": ">=0.1.3"
  },
  "devDependencies": {
    "babel": "^5.4.3",
    "babel-eslint": "^3.1.17",
    "babelify": "^6.1.3",
    "browserify-istanbul": "^0.2.1",
    "chai": "^3.2.0",
    "eslint": "^0.23.0",
    "eslint-plugin-react": "^2.5.2",
    "gulp": "^3.9.0",
    "gulp-eslint": "^0.15.0",
    "karma": "^0.13.3",
    "karma-browserify": "^4.2.1",
    "karma-chai-sinon": "^0.1.5",
    "karma-coverage": "^0.4.2",
    "karma-mocha": "^0.2.0",
    "karma-mocha-reporter": "^1.0.4",
    "karma-phantomjs-launcher": "^0.2.0",
    "mocha": "^2.2.5",
    "phantomjs": "^1.9.17",
    "react-router": "^0.13.3",
    "react-stub-context": "^0.3.0",
    "react-tap-event-plugin": "^0.1.6",
    "sinon": "^1.15.4",
    "sinon-chai": "^2.8.0"
  },
  "readme": "#[Material-UI](http://callemall.github.io/material-ui/) [![npm package](https://img.shields.io/npm/v/material-ui.svg?style=flat-square)](https://www.npmjs.org/package/material-ui) [![Build Status](https://img.shields.io/travis/callemall/material-ui.svg?style=flat-square)](https://travis-ci.org/callemall/material-ui) [![Gitter](https://img.shields.io/badge/gitter-join%20chat-f81a65.svg?style=flat-square)](https://gitter.im/callemall/material-ui?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge)\n\n[![PeerDependencies](https://img.shields.io/david/peer/callemall/material-ui.svg?style=flat-square)](https://david-dm.org/callemall/material-ui#info=peerDependencies&view=list)\n[![Dependencies](https://img.shields.io/david/callemall/material-ui.svg?style=flat-square)](https://david-dm.org/callemall/material-ui)\n[![DevDependencies](https://img.shields.io/david/dev/callemall/material-ui.svg?style=flat-square)](https://david-dm.org/callemall/material-ui#info=devDependencies&view=list)\n\nMaterial-UI is a set of [React](http://facebook.github.io/react/) components that implement [Google's Material Design](https://www.google.com/design/spec/material-design/introduction.html) specification.\n\nCheck out our [documentation site](http://www.material-ui.com/) for live examples. It's still a work in progress, but hopefully you can see where we're headed.\n\n## Prerequisites\n\nWe recommend that you get started with the [React Library](http://facebook.github.io/react/) before diving into material-ui for a better understanding. Should you choose to skip this, don't worry, we'll explain relevant React concepts as they come along.\n\n## Installation\n\nMaterial-UI is available as an [npm package](https://www.npmjs.org/package/material-ui).\n```sh\nnpm install material-ui\n```\nAfter npm install, you'll find all the .jsx files in the /src folder and their compiled versions in the /lib folder.\n\n### React-Tap-Event-Plugin\nSome components use [react-tap-event-plugin](https://github.com/zilverline/react-tap-event-plugin) to\nlisten for touch events. This dependency is temporary and will go away once react v1.0 is released. Until then, be\nsure to inject this plugin at the start of your app.\n```js\nvar injectTapEventPlugin = require(\"react-tap-event-plugin\");\n\n//Needed for onTouchTap\n//Can go away when react 1.0 release\n//Check this repo:\n//https://github.com/zilverline/react-tap-event-plugin\ninjectTapEventPlugin();\n```\n\n### Roboto Font\nBe sure to include the [Roboto](http://www.google.com/fonts/specimen/Roboto) font in your project.\nHere are [some instructions](http://www.google.com/fonts#UsePlace:use/Collection:Roboto:400,300,500) on how to include it in your project.\n\n## Usage\n\nOnce material-ui is included in your project, you can use the components this way:\n```js\n/** MyAwesomeReactComponent.jsx */\n\nvar React = require('react'),\n  mui = require('material-ui'),\n  ThemeManager = new mui.Styles.ThemeManager(),\n  RaisedButton = mui.RaisedButton;\n\nvar MyAwesomeReactComponent = React.createClass({\n\n  childContextTypes: {\n    muiTheme: React.PropTypes.object\n  },\n\n  getChildContext: function() {\n    return {\n      muiTheme: ThemeManager.getCurrentTheme()\n    };\n  },\n\n  render: function() {\n    return (\n        <RaisedButton label=\"Default\" />\n    );\n  }\n\n});\n\nmodule.exports = MyAwesomeReactComponent;\n\n```\n\n### Theme\n\n**Please note that since v0.8.0, you also need to define a theme for components to start working.** For instructions on implementing and using themes, visit our [documentation](http://material-ui.com/#/customization/themes).\n\n## Customization\n\nMaterial-UI components have their styles defined inline. There are two approaches to overriding these styles:\n\n* Override individual component styles via the `style` prop\n* Define a Theme to apply overarching style changes\n\nThis allows you to override variables used by components without having to modify material-ui source files directly.\n\n## Examples\nThere are 2 projects that you can look at to help you get started. The first project can be found in the [example folder](https://github.com/callemall/material-ui/tree/master/example). This is a basic project that shows how you can consume material-ui components in your own project.\n\nThe second project is the actual documentation site. This is a more complex project but will give examples of every component. Check out the [docs folder](https://github.com/callemall/material-ui/tree/master/docs) for build instructions.\n\n## Contribute\n\n[Material-UI](http://www.material-ui.com/) came about from our love of [React](http://facebook.github.io/react/) and [Google's Material Design](https://www.google.com/design/spec/material-design/introduction.html). We're currently using it on a project at [Call-Em-All](https://www.call-em-all.com/) and plan on adding to it and making it better. If you'd like to help, check out the [docs folder](https://github.com/callemall/material-ui/tree/master/docs). We'd greatly appreciate any contribution you make. :)\n\n## License\nThis project is licensed under the terms of the [MIT license](https://github.com/callemall/material-ui/blob/master/LICENSE)\n",
  "readmeFilename": "README.md",
  "_id": "material-ui@0.10.4",
  "_from": "material-ui@^0.10.2"
}
